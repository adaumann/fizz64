program intro;
@setvalue "exomizer_toggle" 0
@ifndef IS_DEMO
	@setvalue "output_type" "prg"
@endif

// @use "demounit"
@use "tables/luminosities"
@use "screen/fadeinout"

var  
	@perlinnoise "title/per1.bin" 40 25 2 1 1  170 140
	fadedata : incbin("title/per1.bin",$C000);
	@export "title/title.flf" "title/title.bin" 256
	i: byte;
	exit: boolean;
	ready: boolean;
	img_data:incbin("title/title_data.bin", $6000);
	img_col : incbin("title/title_color.bin");
@ifndef IS_DEMO
	music: incsid("music/fizz_intro_2000.sid",2);
@endif

@startblock $3000 "code"


procedure Init();
begin
// Executed in stand-alone
@ifndef IS_DEMO 
	disableciainterrupts();
	preventirq();
	setmemoryconfig(1,0,0);
@endif	

	setmulticolormode();
	setbitmapmode();
	setcharsetandscreenlocation($6000,$4400);
	setbank(VIC_BANK1);
	//copyimagecolordata(#img_col,1);	

	screen_bg_col:=black;
	screen_fg_col:=black;
	clearscreen(0,^$4400);	
	clearscreen(0,^$D800);		
	InitSid(^$2000);
end;

interrupt RasterMain();
begin
	startirq(0);
	setmulticolormode();
	setbitmapmode();
	setcharsetandscreenlocation($6000,$4400);
	setbank(VIC_BANK1);

	call(^$2003);
	ReadJoy2();
	if(joy2 & JOY_FIRE = JOY_FIRE and ready = true) then exit := true;
	closeIrq();

end;

@endblock

// This effect starts at $0900!	
begin
	Init();
	// Loop();
	ready := false;
	exit := false;
	StartRasterChain(RasterMain(), 0, 0); // Don't use kernal
	FadeInOut::InitCols(#Luminosities::fromBlue);
	FadeInOut::DefaultFadeIn(#img_col,$4400,#fadedata,2);	
	
	ready := true;
	
	while(exit = false) do begin end;
	setmulticolormode();
	setbitmapmode();
	setcharsetandscreenlocation($6000,$4400);
	setbank(VIC_BANK1);

	FadeInOut::DefaultFadeOut(#img_col,$4400,#fadedata,2);	
	@ifdef IS_DEMO 
	asm("
		jmp @bootStartAddress
	");
	@endif
	Loop();
end.